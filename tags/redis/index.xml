<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Redis on 宋惠龙的博客</title>
    <link>https://redolog.github.io/tags/redis/</link>
    <description>Recent content in Redis on 宋惠龙的博客</description>
    <image>
      <url>https://redolog.github.io/avatar.png</url>
      <link>https://redolog.github.io/avatar.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Nov 2024 13:21:25 +0800</lastBuildDate><atom:link href="https://redolog.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>复杂对象序列化失败问题一例</title>
      <link>https://redolog.github.io/posts/rd/troubleshoot/serialization/ddd-entity-redis-down/</link>
      <pubDate>Fri, 15 Nov 2024 13:21:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/troubleshoot/serialization/ddd-entity-redis-down/</guid>
      <description>&lt;p&gt;踩坑一则复杂对象（领域实体）序列化失败问题。&lt;/p&gt;
&lt;p&gt;归因：测试环境&lt;code&gt;Redis&lt;/code&gt;连接挂掉，同时对&lt;code&gt;DDD&lt;/code&gt;领域实体序列化，&lt;code&gt;JSON.toJSON()&lt;/code&gt; 封装了异常，导致关键异常栈丢失，后经过正向逆向分析找到了问题原因与解法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用jackson反序列化未忽略未知字段时报错 `UnrecognizedPropertyException` 问题一例</title>
      <link>https://redolog.github.io/posts/rd/troubleshoot/serialization/jackson/unrecognized_property_exception/</link>
      <pubDate>Tue, 27 Jun 2023 21:36:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/troubleshoot/serialization/jackson/unrecognized_property_exception/</guid>
      <description>&lt;p&gt;踩坑，&lt;code&gt;Redis&lt;/code&gt;缓存使用&lt;code&gt;Jackson2JsonRedisSerializer&lt;/code&gt;管理序列化，未设置&lt;code&gt;disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)&lt;/code&gt;，上线中新代码写入了新的缓存字段结构，旧代码读到新结构报错&lt;code&gt;UnrecognizedPropertyException&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>spring-data-redis版本过低，导致并发获取数据为null问题一例</title>
      <link>https://redolog.github.io/posts/rd/troubleshoot/redis/cacheable-anno/spring-data-redis/get_non_atomic/</link>
      <pubDate>Mon, 27 Feb 2023 21:36:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/troubleshoot/redis/cacheable-anno/spring-data-redis/get_non_atomic/</guid>
      <description>&lt;p&gt;踩坑，&lt;code&gt;spring-data-redis&lt;/code&gt;版本过低，导致并发获取数据为&lt;code&gt;null&lt;/code&gt;问题一例，试用&lt;code&gt;phind.com&lt;/code&gt;AI 搜索，快速定位到了问题原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>混部redis写文件竞态严重导致实例获取不到连接问题一例</title>
      <link>https://redolog.github.io/posts/rd/troubleshoot/redis/asynchronous_aof_fsync_is_taking_too_long/</link>
      <pubDate>Tue, 29 Nov 2022 21:36:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/troubleshoot/redis/asynchronous_aof_fsync_is_taking_too_long/</guid>
      <description>&lt;p&gt;踩坑&lt;code&gt;redis&lt;/code&gt;混部，导致&lt;code&gt;AOF&lt;/code&gt;写磁盘过多，导致影响其他实例。通过与&lt;code&gt;sre&lt;/code&gt;协作、分析日志，解决了问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis内存优化策略</title>
      <link>https://redolog.github.io/posts/rd/storage/redis/memory-optimization/</link>
      <pubDate>Wed, 20 Jul 2022 18:10:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/storage/redis/memory-optimization/</guid>
      <description>&lt;p&gt;了解Redis如何优化内存开销，总结、学习其思想。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LRU工业级案例</title>
      <link>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru-industrial-case/</link>
      <pubDate>Mon, 27 Jun 2022 15:35:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru-industrial-case/</guid>
      <description>&lt;p&gt;了解&lt;code&gt;LRU&lt;/code&gt;工业级实现，以&lt;code&gt;MySQL&lt;/code&gt;、&lt;code&gt;Redis&lt;/code&gt;为例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>译---在Redis中存储亿万级的简单KV数据</title>
      <link>https://redolog.github.io/posts/english/translation/storing_hundreds_of_millions_of_simple_key_value_pairs_in_redis/</link>
      <pubDate>Fri, 15 Jan 2021 13:18:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/english/translation/storing_hundreds_of_millions_of_simple_key_value_pairs_in_redis/</guid>
      <description>原文：Storing hundreds of millions of simple key-value pairs in Redis 。 背景：本文讲的是Instagram团队2011年时碰到的一个技术场景。新旧系统迁移，需要做一些脚手架</description>
    </item>
    
  </channel>
</rss>
