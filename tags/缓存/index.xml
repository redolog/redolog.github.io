<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>缓存 on 宋惠龙的博客</title>
    <link>https://redolog.github.io/tags/%E7%BC%93%E5%AD%98/</link>
    <description>Recent content in 缓存 on 宋惠龙的博客</description>
    <image>
      <url>https://redolog.github.io/avatar.png</url>
      <link>https://redolog.github.io/avatar.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 12 Jan 2025 22:25:25 +0800</lastBuildDate><atom:link href="https://redolog.github.io/tags/%E7%BC%93%E5%AD%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>缓存高并发常见问题及方案</title>
      <link>https://redolog.github.io/posts/rd/design/cache-concurrency/</link>
      <pubDate>Sun, 12 Jan 2025 22:25:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/design/cache-concurrency/</guid>
      <description>通过本文，我来统一梳理一下缓存高并发场景常见问题以及解决方案。</description>
    </item>
    
    <item>
      <title>LRU工业级案例</title>
      <link>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru-industrial-case/</link>
      <pubDate>Mon, 27 Jun 2022 15:35:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru-industrial-case/</guid>
      <description>&lt;p&gt;了解&lt;code&gt;LRU&lt;/code&gt;工业级实现，以&lt;code&gt;MySQL&lt;/code&gt;、&lt;code&gt;Redis&lt;/code&gt;为例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LRU基本实现及优化</title>
      <link>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru/</link>
      <pubDate>Thu, 23 Jun 2022 15:35:25 +0800</pubDate>
      
      <guid>https://redolog.github.io/posts/rd/algo/cache/replacement-policy/lru/</guid>
      <description>&lt;p&gt;从零实现一个&lt;code&gt;LRU&lt;/code&gt;，同时优化我们的版本。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
